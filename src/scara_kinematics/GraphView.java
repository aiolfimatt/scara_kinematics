/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Comm_plc.java
 *
 * Created on 18-giu-2012, 8.11.21
 */
package scara_kinematics;

import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import javax.swing.*;
import java.util.ArrayList;
import java.awt.event.*;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.Stroke;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.util.StringTokenizer;
import java.io.*;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.Scanner;
import org.jfree.chart.ChartMouseEvent;
import org.jfree.chart.ChartMouseListener;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.annotations.XYLineAnnotation;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.StandardXYItemRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.data.general.DatasetUtilities;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author mauro
 */
public class GraphView extends javax.swing.JPanel implements ChartMouseListener {

    /** Creates new form Comm_plc */
    public GraphView(MotionPlannerView father) {
        this.father = father;
        initComponents();
        selected_graph = -1;
        selected_cam = -1;
        Form_grafici.setVisible(true);
        aggiorna_chart();
    }
   
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Form_grafici = new javax.swing.JDialog();
        Plot = new javax.swing.JPanel();
        buttonIndietro = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelX = new javax.swing.JLabel();
        LabelG1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        LabelG2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        LabelG3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        LabelG4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBoxType1 = new javax.swing.JComboBox();
        jComboBoxType2 = new javax.swing.JComboBox();
        jComboBoxType3 = new javax.swing.JComboBox();
        jComboBoxType4 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jButtonInfo1 = new javax.swing.JButton();
        jButtonInfo2 = new javax.swing.JButton();
        jButtonInfo3 = new javax.swing.JButton();
        jButtonInfo4 = new javax.swing.JButton();
        accGroup = new javax.swing.ButtonGroup();

        Form_grafici.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Form_grafici.setMinimumSize(new java.awt.Dimension(1024, 610));
        Form_grafici.setName("Form_grafici"); // NOI18N
        Form_grafici.addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                Form_graficiWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        Form_grafici.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                Form_graficiWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                Form_graficiWindowClosing(evt);
            }
        });

        Plot.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Plot.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        Plot.setName("Plot"); // NOI18N
        Plot.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                PlotComponentResized(evt);
            }
        });

        javax.swing.GroupLayout PlotLayout = new javax.swing.GroupLayout(Plot);
        Plot.setLayout(PlotLayout);
        PlotLayout.setHorizontalGroup(
            PlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 977, Short.MAX_VALUE)
        );
        PlotLayout.setVerticalGroup(
            PlotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 413, Short.MAX_VALUE)
        );

        buttonIndietro.setText("Indietro");
        buttonIndietro.setName("buttonIndietro"); // NOI18N
        buttonIndietro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonIndietroActionPerformed(evt);
            }
        });

        jLabel1.setText("CURSOR");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("X:");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText("G1:");
        jLabel3.setName("jLabel3"); // NOI18N

        labelX.setName("labelX"); // NOI18N

        LabelG1.setName("LabelG1"); // NOI18N

        jLabel4.setText("G2:");
        jLabel4.setName("jLabel4"); // NOI18N

        LabelG2.setName("LabelG2"); // NOI18N

        jLabel5.setText("G3:");
        jLabel5.setName("jLabel5"); // NOI18N

        LabelG3.setName("LabelG3"); // NOI18N

        jLabel6.setText("G4:");
        jLabel6.setName("jLabel6"); // NOI18N

        LabelG4.setName("LabelG4"); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Trajectory_x", "Trajectory_y", "Motor1", "Motor2" }));
        jComboBox1.setName("jComboBox1"); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBoxType1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Position", "Speed", "Accel." }));
        jComboBoxType1.setName("jComboBoxType1"); // NOI18N
        jComboBoxType1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxType1ActionPerformed(evt);
            }
        });

        jComboBoxType2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Position", "Speed", "Accel." }));
        jComboBoxType2.setName("jComboBoxType2"); // NOI18N
        jComboBoxType2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxType2ActionPerformed(evt);
            }
        });

        jComboBoxType3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Position", "Speed", "Accel." }));
        jComboBoxType3.setName("jComboBoxType3"); // NOI18N
        jComboBoxType3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxType3ActionPerformed(evt);
            }
        });

        jComboBoxType4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Position", "Speed", "Accel." }));
        jComboBoxType4.setName("jComboBoxType4"); // NOI18N
        jComboBoxType4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxType4ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Trajectory_x", "Trajectory_y", "Motor1", "Motor2" }));
        jComboBox2.setName("jComboBox2"); // NOI18N
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Trajectory_x", "Trajectory_y", "Motor1", "Motor2" }));
        jComboBox3.setName("jComboBox3"); // NOI18N
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Trajectory_x", "Trajectory_y", "Motor1", "Motor2" }));
        jComboBox4.setName("jComboBox4"); // NOI18N
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jButtonInfo1.setText("Info");
        jButtonInfo1.setName("jButtonInfo1"); // NOI18N
        jButtonInfo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInfo1ActionPerformed(evt);
            }
        });

        jButtonInfo2.setText("Info");
        jButtonInfo2.setName("jButtonInfo2"); // NOI18N
        jButtonInfo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInfo2ActionPerformed(evt);
            }
        });

        jButtonInfo3.setText("Info");
        jButtonInfo3.setName("jButtonInfo3"); // NOI18N
        jButtonInfo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInfo3ActionPerformed(evt);
            }
        });

        jButtonInfo4.setText("Info");
        jButtonInfo4.setName("jButtonInfo4"); // NOI18N
        jButtonInfo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInfo4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Form_graficiLayout = new javax.swing.GroupLayout(Form_grafici.getContentPane());
        Form_grafici.getContentPane().setLayout(Form_graficiLayout);
        Form_graficiLayout.setHorizontalGroup(
            Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Form_graficiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Form_graficiLayout.createSequentialGroup()
                        .addGroup(Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxType2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxType3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxType4, 0, 96, Short.MAX_VALUE)
                            .addComponent(jComboBoxType1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonInfo4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonInfo3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonInfo2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Form_graficiLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelX, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(LabelG1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelG2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelG3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelG4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonIndietro)
                    .addComponent(Plot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        Form_graficiLayout.setVerticalGroup(
            Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Form_graficiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxType1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInfo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxType2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInfo2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxType3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInfo3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxType4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInfo4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Form_graficiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3))
                    .addComponent(labelX, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelG1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(LabelG2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(LabelG3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(LabelG4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Plot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184)
                .addComponent(buttonIndietro)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 461, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

private void Form_graficiWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_Form_graficiWindowClosed
}//GEN-LAST:event_Form_graficiWindowClosed

private void Form_graficiWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_Form_graficiWindowGainedFocus
}//GEN-LAST:event_Form_graficiWindowGainedFocus

private void buttonIndietroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonIndietroActionPerformed
    father.returnFromGrafici();
}//GEN-LAST:event_buttonIndietroActionPerformed

private void PlotComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_PlotComponentResized
    aggiorna_chart();
}//GEN-LAST:event_PlotComponentResized

private void Form_graficiWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_Form_graficiWindowClosing
    father.returnFromGrafici();
}//GEN-LAST:event_Form_graficiWindowClosing

private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
 aggiorna_chart();
}//GEN-LAST:event_jComboBox1ActionPerformed

private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
 aggiorna_chart();
}//GEN-LAST:event_jComboBox2ActionPerformed

private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
 aggiorna_chart();
}//GEN-LAST:event_jComboBox3ActionPerformed

private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
 aggiorna_chart();
}//GEN-LAST:event_jComboBox4ActionPerformed

private void jComboBoxType1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxType1ActionPerformed
 aggiorna_chart();
}//GEN-LAST:event_jComboBoxType1ActionPerformed

private void jComboBoxType2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxType2ActionPerformed
 aggiorna_chart();
}//GEN-LAST:event_jComboBoxType2ActionPerformed

private void jComboBoxType3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxType3ActionPerformed
 aggiorna_chart();
}//GEN-LAST:event_jComboBoxType3ActionPerformed

private void jComboBoxType4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxType4ActionPerformed
 aggiorna_chart();
}//GEN-LAST:event_jComboBoxType4ActionPerformed

private void jButtonInfo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInfo1ActionPerformed
show_info(1);
}//GEN-LAST:event_jButtonInfo1ActionPerformed

private void jButtonInfo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInfo2ActionPerformed
show_info(2);
}//GEN-LAST:event_jButtonInfo2ActionPerformed

private void jButtonInfo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInfo3ActionPerformed
show_info(3);
}//GEN-LAST:event_jButtonInfo3ActionPerformed

private void jButtonInfo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInfo4ActionPerformed
show_info(4);
}//GEN-LAST:event_jButtonInfo4ActionPerformed
protected void show_info(int n_graph)
{
    int selected_graph=0;
    int selected_type=0;
    double max=-1;
    double min=-1;
    String unit="";
    String output_str="";
    try
    {
        
        switch(n_graph)
        {
            case 1:
            {
                selected_graph = jComboBox1.getSelectedIndex();
                selected_type  = jComboBoxType1.getSelectedIndex();
                max = dataG1.getMaxY();
                min = dataG1.getMinY();
            }
            break;
            case 2:
            {
                selected_graph = jComboBox2.getSelectedIndex();
                selected_type  = jComboBoxType2.getSelectedIndex();
                max = dataG2.getMaxY();
                min = dataG2.getMinY();
            }
            break;
            case 3:
            {
                selected_graph = jComboBox3.getSelectedIndex();
                selected_type  = jComboBoxType3.getSelectedIndex();
                max = dataG3.getMaxY();
                min = dataG3.getMinY();
            }
            break;
            case 4:
            {
                selected_graph = jComboBox4.getSelectedIndex();
                selected_type  = jComboBoxType4.getSelectedIndex();
                max = dataG4.getMaxY();
                min = dataG4.getMinY();
            }
            break;
            default:
            break;
        }
        switch(selected_graph)
        {
            case 0: case 1:
            {
                unit = father.m.unit_traj;
            }
            break;
            case 2:
            {
                unit = father.m.unit_motor1;
            }
            break;
            case 3:
            {
                unit = father.m.unit_motor2;
            }   
            break;
            default:
            break;
        }
        max = Math.round(max*1000)/1000;
        min = Math.round(min*1000)/1000;
        switch(selected_type)
        {
            case 0:
            {
                output_str = "Max: "+max+" "+unit+"\n Min: "+min+" "+unit;
            }
            break;
            case 1:
            {
                output_str = "Max: "+max+" "+unit+"/s\n Min: "+min+" "+unit+"/s\n";
                if(unit.equals("Deg"))
                {
                    output_str+= "Max: "+Math.round((max/360*60)*1000)/1000+" rpm\n Min: "+Math.round((min/360*60)*1000)/1000+" rpm\n";
                }
            }
            break;
            case 2:
            {
                output_str = "Max: "+max+" "+unit+"/s^2\n Min: "+min+" "+unit+"/s^2";
            }
            break;
            default:
            break;
        }
        JOptionPane.showMessageDialog(Form_grafici,output_str);
    }
    catch(Exception e)
    {
        e.printStackTrace();  
    }
    
}

public void dispose_f() {
    Form_grafici.dispose();
}
    protected void aggiorna_chart() {
        // acquisizione Liste base ( posizioni)
        List [] g = new List[4];
        String [] units = new String[4];
        List g_aux_1;
        List g_aux_2;
        List times = new ArrayList<Double>();
        //recupero timebase
        double time_interval;
        double step_s;
        double acc = 0;
        time_interval = father.getTimeInterval();
        step_s = ((time_interval) / father.getNPoints());
        for(int k=0;k< father.getNPoints();k++)
        {
            times.add(acc);
            acc+=step_s;
        }
        for(int i=0;i<4;i++)
        {
            g_aux_1 = new ArrayList<Double>();
            g_aux_2 = new ArrayList<Double>();
            g[i] = new ArrayList<Double>();
            int selected_graph = 0;
            int selected_type = 0;
            
            switch(i)
            {
                case 0: 
                {
                    selected_graph = jComboBox1.getSelectedIndex();
                    selected_type = jComboBoxType1.getSelectedIndex();
                }
                break;
                case 1: 
                {
                    selected_graph = jComboBox2.getSelectedIndex();
                    selected_type = jComboBoxType2.getSelectedIndex();
                }
                break;
                case 2: 
                {
                    selected_graph = jComboBox3.getSelectedIndex();
                    selected_type = jComboBoxType3.getSelectedIndex();
                }
                break;
                case 3: 
                {
                    selected_graph = jComboBox4.getSelectedIndex();
                    selected_type = jComboBoxType4.getSelectedIndex();
                }
                break;
                default:
                break;
            }
            switch(selected_graph)
            {
                case 0:
                {
                   for(int k = 0; k<father.m.n_points;k++)
                   {
                       scara_kinematics.Point p = (scara_kinematics.Point)(father.m.trajectory.get(k));
                       g[i].add(p.getX());
                   }
                   units[i] = ""+father.m.unit_traj;
                }
                break;
                case 1:
                {
                   for(int k = 0; k<father.m.n_points;k++)
                   {
                       scara_kinematics.Point p = (scara_kinematics.Point)(father.m.trajectory.get(k));
                       g[i].add(p.getY());
                   }
                   units[i] = ""+father.m.unit_traj;
                }
                break;
                case 2:
                {
                   for(int k = 0; k<father.m.n_points;k++)
                   {
                       g[i].add(father.m.motor1_points.get(k));
                   }
                   units[i] = ""+father.m.unit_motor1;
                }
                break;
                case 3:
                {
                   for(int k = 0; k<father.m.n_points;k++)
                   {
                       g[i].add(father.m.motor2_points.get(k));
                   }
                   units[i] = ""+father.m.unit_motor2;
                }
                break;    
                default:
                break;
            }
            switch(selected_type)
            {
                //speed
                case 1:
                {
                   g_aux_1.add(0.0);
                   for(int k=1;k<father.m.n_points;k++) 
                   {
                       g_aux_1.add(((Double)g[i].get(k)-(Double)g[i].get(k-1))/(((Double)times.get(k)-(Double)times.get(k-1))));
                   }
                   for(int k = 0;k < father.m.n_points;k++)
                   {
                       g[i].set(k,g_aux_1.get(k));
                   }
                   g[i].set(0,g_aux_1.get(1));
                   units[i]+="/s";
                }
                break;
                //acc
                case 2:
                {
                   g_aux_1.add(0.0);
                   for(int k=1;k < father.m.n_points;k++) 
                   {
                       g_aux_1.add(((Double)g[i].get(k)-(Double)g[i].get(k-1))/(((Double)times.get(k)-(Double)times.get(k-1))));
                   }
                   g_aux_2.add(0.0);
                   g_aux_2.add(0.0);
                   for(int k=2;k < father.m.n_points;k++) 
                   {
                       g_aux_2.add(((Double)g_aux_1.get(k)-(Double)g_aux_1.get(k-1))/(((Double)times.get(k)-(Double)times.get(k-1))));
                   }
                   for(int k=0;k < father.m.n_points;k++)
                   {
                       g[i].set(k,g_aux_2.get(k));
                   }
                   g[i].set(0,g_aux_2.get(2));
                   g[i].set(1,g_aux_2.get(2));
                   units[i]+="/s^2";
                }
                break;
                //
                default:
                break;
            }
        }
        //G1
        dataG1 = new XYSeries("G1");
        for (int i = 0; i < father.m.n_points; i++) {
            dataG1.add(((Double)times.get(i)), (Double)g[0].get(i));
        }
        XYSeriesCollection collection1 = new XYSeriesCollection();
        collection1.addSeries(dataG1);
        XYItemRenderer renderer1 = new StandardXYItemRenderer();
        NumberAxis rangeAxis1 = new NumberAxis(units[0]);
        rangeAxis1.setLabelFont(new Font("Dialog", Font.PLAIN, 9));
        subplot1 = new XYPlot(collection1, null, rangeAxis1, renderer1);
        subplot1.setDomainCrosshairVisible(true);
        subplot1.setDomainCrosshairLockedOnData(false);
        subplot1.setRangeCrosshairVisible(false);
        subplot1.setRangeCrosshairLockedOnData(false);
        //G2
        dataG2 = new XYSeries("G2");
        for (int i = 0; i < father.m.n_points; i++) {
            dataG2.add(((Double)times.get(i)), (Double)g[1].get(i));
        }
        XYSeriesCollection collection2 = new XYSeriesCollection();
        collection2.addSeries(dataG2);
        XYItemRenderer renderer2 = new StandardXYItemRenderer();
        NumberAxis rangeAxis2 = new NumberAxis(units[1]);
        rangeAxis2.setLabelFont(new Font("Dialog", Font.PLAIN, 9));
        subplot2 = new XYPlot(collection2, null, rangeAxis2, renderer2);
        subplot2.setDomainCrosshairVisible(true);
        subplot2.setDomainCrosshairLockedOnData(false);
        subplot1.setRangeCrosshairVisible(false);
        subplot2.setRangeCrosshairLockedOnData(false);
        //G3
        dataG3 = new XYSeries("G3");
        for (int i = 0; i < father.m.n_points; i++) {
            dataG3.add(((Double)times.get(i)), (Double)g[2].get(i));
        }
        XYSeriesCollection collection3 = new XYSeriesCollection();
        collection3.addSeries(dataG3);
        XYItemRenderer renderer3 = new StandardXYItemRenderer();
        NumberAxis rangeAxis3 = new NumberAxis(units[2]);
        subplot3 = new XYPlot(collection3, null, rangeAxis3, renderer3);
        rangeAxis3.setLabelFont(new Font("Dialog", Font.PLAIN, 9));
        subplot3.setDomainCrosshairVisible(true);
        subplot3.setDomainCrosshairLockedOnData(false);
        subplot1.setRangeCrosshairVisible(false);
        subplot3.setRangeCrosshairLockedOnData(false);
        //G4
        dataG4 = new XYSeries("G4");
        for (int i = 0; i < father.m.n_points; i++) {
            dataG4.add(((Double)times.get(i)), (Double)g[3].get(i));
        }
        XYSeriesCollection collection4 = new XYSeriesCollection();
        collection4.addSeries(dataG4);
        XYItemRenderer renderer4 = new StandardXYItemRenderer();
        NumberAxis rangeAxis4 = new NumberAxis(units[3]);
        subplot4 = new XYPlot(collection4, null, rangeAxis4, renderer4);
        rangeAxis4.setLabelFont(new Font("Dialog", Font.PLAIN, 9));
        subplot4.setDomainCrosshairVisible(true);
        subplot4.setDomainCrosshairLockedOnData(false);
        subplot1.setRangeCrosshairVisible(false);
        subplot4.setRangeCrosshairLockedOnData(false);
        //
        NumberAxis valueAxis = new NumberAxis("Master (s)");
        valueAxis.setRange(0, (step_s*father.m.n_points));
 
        plot = new CombinedDomainXYPlot(valueAxis);
        plot.add(subplot1, 1);
        plot.add(subplot2, 1);
        plot.add(subplot3, 1);
        plot.add(subplot4, 1);
        c = new JFreeChart("", JFreeChart.DEFAULT_TITLE_FONT, plot, true);
        Plot.removeAll();
        Plot.setLayout(new BorderLayout());
        CP = new ChartPanel(c, false, true, true, true, true);
        CP.setSize(Plot.getWidth(), Plot.getHeight());
        CP.addChartMouseListener(this);
        Plot.add(CP, BorderLayout.CENTER);
        Plot.validate();
    }
    
    MotionPlannerView father;
    int DIM_BUFFER_CANALE;
    int[] source = {0, 0, 0, 0};
    float pos_prec_punt_graf;
    float curr_X = -1, curr_Y = -1;
    int selected_cam;
    int selected_graph;
    XYPlot subplot1;
    XYPlot subplot2;
    XYPlot subplot3;
    XYPlot subplot4;
    Image bufferImage;
    JFreeChart c;
    ChartPanel CP;
    CombinedDomainXYPlot plot;
    boolean stepacc = false;
    XYSeries dataG1,dataG2,dataG3,dataG4;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JDialog Form_grafici;
    private javax.swing.JLabel LabelG1;
    private javax.swing.JLabel LabelG2;
    private javax.swing.JLabel LabelG3;
    private javax.swing.JLabel LabelG4;
    protected javax.swing.JPanel Plot;
    private javax.swing.ButtonGroup accGroup;
    private javax.swing.JButton buttonIndietro;
    private javax.swing.JButton jButtonInfo1;
    private javax.swing.JButton jButtonInfo2;
    private javax.swing.JButton jButtonInfo3;
    private javax.swing.JButton jButtonInfo4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBoxType1;
    private javax.swing.JComboBox jComboBoxType2;
    private javax.swing.JComboBox jComboBoxType3;
    private javax.swing.JComboBox jComboBoxType4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel labelX;
    // End of variables declaration//GEN-END:variables

    @Override
    public void chartMouseClicked(ChartMouseEvent event) {
        int mouseX = event.getTrigger().getX();
        int mouseY = event.getTrigger().getY();
        Point mousePoint = new Point(mouseX, mouseY);
        // convert the Java2D coordinate to axis coordinates...
        CombinedDomainXYPlot cdPlot = this.plot;
        ChartRenderingInfo chartInfo = this.CP.getChartRenderingInfo();
        Point2D java2DPoint = this.CP.translateScreenToJava2D(mousePoint);
        PlotRenderingInfo plotInfo = chartInfo.getPlotInfo();
        // see if the point is in one of the subplots; this is the
        // intersection of the range and domain crosshairs
        int subplotIndex = plotInfo.getSubplotIndex(java2DPoint);
        if (subplotIndex >= 0) // yep, position the crosshairs
        {
            // all subplots have the domain crosshair
            // the x coordinate is the same for all subplots
            Rectangle2D dataArea = CP.getChartRenderingInfo().getPlotInfo().getSubplotInfo(subplotIndex).getDataArea();
           
            Rectangle2D panelArea = this.CP.getScreenDataArea(mouseX, mouseY);
            List subplotsList = cdPlot.getSubplots();
            Iterator iterator = subplotsList.iterator();
            int index = 0;
            while (iterator.hasNext()) // for each subplot ...
            {
                XYPlot subplot = (XYPlot) iterator.next();
                // set domain crosshair for each plot
                subplot.clearRangeMarkers();
                subplot.clearDomainMarkers();
               
                if (subplotIndex == index) {
                    
                } else {
                  
                }
                double xx = cdPlot.getDomainAxis().java2DToValue(java2DPoint.getX(), dataArea, cdPlot.getDomainAxisEdge());
                
                subplot.setDomainCrosshairLockedOnData(false);
                subplot.setDomainCrosshairValue(xx, true);
                double xval = subplot.getDomainCrosshairValue();
                double yval = DatasetUtilities.findYValue(subplot.getDataset(), 0, xval);
                labelX.setText("" + (float) Math.round(xval));
                if (index == 0) {
                    LabelG1.setText("" + (float) Math.round(yval * 100) / 100);
                }
                if (index == 1) {
                    LabelG2.setText("" + (float) Math.round(yval * 1000) / 1000);
                }
                if (index == 2) {
                    LabelG3.setText("" + (float) Math.round(yval * 1000000) / 1000000);
                }
                if (index == 3) {
                    LabelG4.setText("" + (float) Math.round(yval * 1000000) / 1000000);
                }
                index++;
            }
        }
    }
    @Override
    public void chartMouseMoved(ChartMouseEvent cme) {
    }
}